// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Airport {
  id        String   @id
  city      String
  state     String
  country   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Route     Route?

  @@map("airports")
}

model Aircraft {
  id        String   @id
  code      String   @unique
  firstSeat String
  lastSeat  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Flight    Flight?

  @@index([code])
  @@map("aircrafts")
}

model Seat {
  id          String   @id
  flightId    String
  seatTypeId  String
  passengerId String?
  code        String
  side        String //window | middle | corridor
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  flight    Flight     @relation(fields: [flightId], references: [id])
  seatType  SeatType   @relation(fields: [seatTypeId], references: [id])
  passenger Passenger? @relation(fields: [passengerId], references: [id])

  @@index([flightId, passengerId])
  @@map("seats")
}

model SeatType {
  id        String   @id
  name      String
  price     String
  seat      Seat[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("seat_types")
}

model Passenger {
  id        String   @id
  flightId  String
  firstName String
  lastName  String
  birthDate DateTime
  gender    String
  passport  String
  cpf       String
  group     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  flight Flight @relation(fields: [flightId], references: [id])
  seat   Seat[]

  @@map("passengers")
}

model Route {
  id          String   @id
  airportIdTo String   @unique
  duration    String
  Flight      Flight[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  airportTo Airport @relation(fields: [airportIdTo], references: [id])

  @@map("routes")
}

model Flight {
  id                 String      @id
  routeId            String
  aircraftCode       String      @unique
  finishBookingTime  DateTime
  boardingTime       DateTime
  boardingEndingTime DateTime
  flightTime         DateTime
  terminal           String
  gate               String
  seats              Seat[]
  passenger          Passenger[]
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @default(now())

  route    Route    @relation(fields: [routeId], references: [id])
  aircraft Aircraft @relation(fields: [aircraftCode], references: [code])

  @@map("flights")
}
